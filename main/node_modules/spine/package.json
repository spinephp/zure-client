{
  "name": "spine",
  "description": "MVC Library.",
  "version": "1.3.2",
  "author": {
    "name": "maccman"
  },
  "keywords": [
    "spine",
    "coffeescript",
    "MVC"
  ],
  "contributors": [
    {
      "name": "maccman"
    },
    {
      "name": "aeischeid"
    },
    {
      "name": "cengebretson"
    },
    {
      "name": "adambiggs"
    }
  ],
  "devDependencies": {
    "coffee-script": ">=1.7.1"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/spine/spine/blob/master/LICENSE"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/spine/spine.git"
  },
  "main": "./index.js",
  "scripts": {
    "test": "set -e; for i in test/*.html; do phantomjs test/lib/run-jasmine.phantom.js file://`pwd`/$i; done"
  },
  "readme": "# Spine\n\n[![Build Status](https://secure.travis-ci.org/spine/spine.png)](http://travis-ci.org/spine/spine)\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/spine/spine/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\nSpine is a lightweight MVC library for building JavaScript web applications. Spine gives you structure and then gets out of your way, allowing you to concentrate on the fun stuff, building awesome web applications.\n\nSpine is opinionated in its approach to web application architecture and design. Spine's architecture complements patterns such as de-coupled components and CommonJS modules, markedly helping with code quality and maintainability.\n\nThe library is written in [CoffeeScript](http://jashkenas.github.com/coffee-script), and though it doesn't necessarily require CoffeeScript to develop applications - you can use whichever language you're most familiar with - the documentation and some associated tools like [Hem](https://github.com/spine/hem) and [spine.app](https://github.com/spine/spine.app) cater to those who prefer CoffeeScript's syntax.\n\nDocumentation is often incomplete or just lies waiting to happen. Approachable source code reduces you knowledge dependencies. Spine is tiny, the core library comes in at less than 700 lines of CoffeeScript code that is written in such a way as not to sacrifice readability. Being lightweight and simple is fundamental to Spine.\n\nFor documentation, usage, and examples, see: [spinejs.com](http://spinejs.com)\n\n# Contributing\n\n## Reporting issues\n\nTo file a bug report, please visit the [GitHub issues page](https://github.com/spine/spine/issues).  It's great if you can attach code (test cases and fixes for bugs, and test cases and a proposed implementation for features), but reproducible bug reports are also welcome. \n\nFor support or help with using spine please use the [Spine Google Group](https://groups.google.com/forum/#!forum/spinejs) and/or StackOverflow. If you post in those places you are more likely to get more people to chime in, and others can benefit from it more readily.\n\n## Cloning master and running the test suite\n\nTo get started contributing to Spine, first clone the repository and make sure you can run the test suite.  If you're not familiar with Git, visit the [Git homepage](http://git-scm.com) to download Git for your platform.\n\nFirst, clone the repository:\n\n```\n$ git clone git://github.com/spine/spine.git\n$ cd spine\n```\n\nNext, open `test/index.html` to run the [Jasmine](http://pivotal.github.com/jasmine/) test suite for spine core.  If you see all the tests passing, you're ready to contribute!\n\n## Contributing to the Spine documentation\n\nPerhaps the easiest way to get started with contributing is through the docs.  If you find typos, bugs, or omissions in the docs, please submit a pull request to fix.  The Spine documentation is a very simple rails app [spine.site](https://github.com/spine/spine.site).\n\n## Contributing to the Spine code\n\nThis recommended contribution process is based on the [Ruby on Rails contribution guide](http://edgeguides.rubyonrails.org/contributing_to_ruby_on_rails.html#contributing-to-the-rails-code).  In general, please include tests with new features or bugfixes, work in a feature branch until you're ready to submit or discuss your code, then fork the repository, push to your fork, and issue a pull request.\n\n### CoffeeScript\n\nWhen submitting a pull request for code, please submit in CoffeeScript. Building the effected js files is required for testing sake, but submitting those js files is optional.\n\nStart by installing local dev dependencies:\n\n```\n$ npm install\n```\n\nThen use the provided build scripts to compile your CoffeeScript files:\n\n```\n$ cake build\n$ cake watch\n```\n\nThese tasks use a locally installed copy of CoffeeScript to ensure all contributors use the same version of the compiler.\n\n### Git\n\nLet's say I'm going to submit a patch to add someFeatureFix:\n\n```\n$ git checkout dev\n```\n\nFeature branches should start from `dev` **not** `master`. If you branch off of, or do builds on the master branch you will get CoffeeScript source map files, which are cool, but tend to ruin automatic merges with git.\n\n```\n$ git checkout -b someFeatureFix\n$ vim test/...\n  # (...add tests...)\n$ cake watch\n  # (...this should recompile and changes you make in your CoffeeScript...)\n\n-- figure out what spine module your changes belong in\n$ vim src/spine.coffee\nor\n$ vim src/[otherSpineComponent].coffee\n  # (...add support...)\n$ open test/index.html\n  # (...make sure tests run for each component that was changed...)\n  # (...test in other browsers with various jquery versions if you feel like there is risk... )\n$ git commit -m \"Add Some Feature Fix\"\n```\n\nThen, [fork the Spine repository](https://github.com/spine/spine/fork), and push your branch to your fork:\n\n```\n$ git remote add <your user name> git@github.com:<your user name>/spine.git\n$ git push <your user name> someFeatureFix\n```\n\nFinally, issue a pull request from inside the GitHub interface to the `dev` branch of spine, and your contribution is ready for consideration, discussion, and (hopefully) merging in!\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/spine/spine/issues"
  },
  "_id": "spine@1.3.2",
  "dist": {
    "shasum": "b5a3dea8f9aae60ba69414195ee63d845cc7ce7e"
  },
  "_from": "spine@~1.3.0",
  "_resolved": "https://registry.npmjs.org/spine/-/spine-1.3.2.tgz"
}
